name: yuboolee
server:
    contextPath: /
    port: 8889

appsettings:
    picfilesport: 8080 #nginx中，上传的静态图片端口
    
spring:

    servlet:
        multipart:
            max-file-size: 20MB
            max-request-size: 20MB
            enabled: true

    cache:
        type: ehcache
        ehcache:
            config: classpath:ehcache-setting.xml


    redis:
            database: 0
            host: 127.0.0.1
            port: 6379
            password:      # 密码（默认为空）
            timeout: 6000ms  # 连接超时时长（毫秒）
            jedis:
                pool:
                    max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
                    max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）
                    max-idle: 10      # 连接池中的最大空闲连接
                    min-idle: 5       # 连接池中的最小空闲连接

    datasource:
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/openauth?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false
        username: root
        password: '123456'
        maxActive: 2335
        maxIdel: 120
        maxWait: 100 
        #初始化连接  
        initial-size: 10
        #是否在自动回收超时连接的时候打印连接的超时错误
        log-abandoned: true
        #是否自动回收超时连接
        remove-abandoned: true
        #超时时间(以秒数为单位)
        remove-abandoned-timeout: 180
        #超时等待时间以毫秒为单位 6000毫秒/1000等于60秒
        max-wait: 1000
        test-while-idle: true
        #检测数据库的查询语句
        validation-query: select 1 from dual
        test-on-borrow: true
        #每隔五分钟检测空闲超过10分钟的连接
        min-evictable-idle-time-millis: 600000
        time-between-eviction-runs-millis: 300000


freeter:
    redis:
        open: false  # 是否开启redis缓存  true开启   false关闭
    shiro:
        redis: false # true表示shiro session存到redis里，需要开启redis，才会生效【分布式场景】

         # APP模块，是通过jwt认证的，如果要使用APP模块，则需要修改【加密秘钥】
    jwt:
        # 加密秘钥
        secret: ODk3MTg4NzY4
        # token有效时长，7天，单位秒
        expire: 604800
        header: token


logging:
     config: classpath:logback-spring.xml
     path: ../logs
     level:
        com:
             vienna:
                 dao: debug
